version: 2.1


version: 2.1

jobs:
  unit_tests:
    working_directory: ~/react-app
    parallelism: 2
    docker:
      - image: circleci/node:13.10.1
    steps:
      - checkout
      - run:
          name: update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          keys:
              # when lock file changes, use increasingly general patterns to restore cache
              - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
              - node-v1-{{ .Branch }}-
              - node-v1-
      - run:
          name: Fetch dependencies
          command: npm install
      - save_cache:
          paths:
              - node_modules  
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: mkdir ~/junit
      - run:
          name: Test application 
          command: npm test

  deploy:
    working_directory: ~/react-app
    macos:
      xcode: 11.3.0
    steps:
      - checkout



workflows:
  build_test_deploy:
    jobs:
      - build 
      - unit_tests:
          requires:
            - build 
      - snapshot_tests: 
          requires:
            - build    
      - hold:
          type: approval
          requires:
            - unit_tests
            - snapshot_tests
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - hold 
          filters:
            branches:
              only: master



orbs:
  expo_orb:
    executors:
      expo_executor:
        docker:
          - image: circleci/node:13.10.1
      #ios here 
      ios_executor:
        macos:
          xcode: 11.3.0
    jobs:
      expo_dev_job:
        executor: ios_executor
        steps:
          - expo_build_command:
              release_channel: "dev"
      expo_default_job:
        executor: ios_executor
        steps:
          - expo_build_command:
              release_channel: "default"
      ios_job:
        executor: ios_executor
        steps:
          - ios_command

    commands:
      ios_command:
        description: ios expo and fastlane 
        steps:
          - checkout

      expo_build_command:
        description: building and sending to expo
        parameters:
          release_channel:
            type: string
            default: "default"
        steps:
          - checkout
          - run:
              name: expo login
              command: | 
                sudo npm install -g expo-cli
                npx expo-cli login -u $EXPO_USERNAME -p $EXPO_PASSWORD
          - run:
              name: build iOS app
              no_output_timeout: 30m
              command: |
                npx expo-cli publish --release-channel production --non-interactive
                npx expo-cli build:ios --release-channel development --non-interactive --no-publish 
          - run:
              name: get ipa 
              command: |
                curl -o app.ipa "$(expo url:ipa --non-interactive)"

          - run:
              name: fastlane deliver 
              command: |
                fastlane deliver --verbose --ipa "app.ipa" --skip_screenshots --skip_metadata

workflows:
  publish_to_expo:
    jobs:
      - expo_orb/expo_dev_job:
          name: expo_dev
          filters:
            branches:
              only: development
      - expo_orb/expo_default_job:
          name: expo_default
          filters:
            branches:
              only: master